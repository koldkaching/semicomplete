#include <cxxtest/TestSuite.h>

#include <grokregex.hpp>
#include <grokmatch.hpp>

#include <sstream>
#include <fstream>
#include <string>

#include <sys/types.h>
#include <sys/stat.h>

#define INPUTDIR "input/"

class GrokPatternsTest : public CxxTest::TestSuite {
  public:
    GrokPatternSet<sregex> default_patterns;
    GrokRegex<sregex> gre;
    GrokMatch<sregex> gm;
    GrokMatch<sregex>::match_map_type matchmap;
    char *filename;

    void setUp() {
      default_patterns.LoadFromFile("../patterns");
      this->gre.AddPatternSet(default_patterns);
      this->filename = NULL;
    }

    void tearDown() {
      if (this->filename != NULL)
        free(this->filename);
    }

    void _testPatternMatch(string pattern_name, bool match_success=true) {
      int result;
      struct stat s;
      this->filename = (char *)malloc(pattern_name.size() + strlen(INPUTDIR) + 1);
      sprintf(this->filename, "%s%s\0", INPUTDIR, pattern_name.c_str());
      result = stat(this->filename, &s);
      if (result == -1) {
        cerr << endl << "No test input for success-match on pattern: " << pattern_name << endl;
        return;
      }

      gre.SetRegex("%" + pattern_name + "%");
      ifstream in(this->filename);
      string line;
      int lineno = 0;
      while (getline(in, line)) {
        lineno += 1;
        if (gre.Search(line, gm) != match_success) {
          cerr << "Match test failure. Expected " << match_success << " but got " << !match_success << endl;
          cerr << " --> Pattern: " << pattern_name << endl;
          cerr << " --> Input: " << line << endl;
          TS_FAIL("failure to match at all");
        } else {
          matchmap = gm.GetMatches();
          if (matchmap["=MATCH"] != line) {
            cerr << "Match test string failure. Did not match entire line as required." << endl;
            cerr << "Match: '" << matchmap["=MATCH"] << "'" << endl;
            cerr << "Expected: '" << line << "'" << endl;
            cerr << "Line number: " << lineno << endl;
            TS_FAIL("failure on match value");
          }
        }
        
      }

    }

%PATTERN_TESTS%
    
};
