divert(-1)
changecom(`###')
define(fatal, `
  divert(0)dnl
  errprint(`$1')dnl
  m4exit(1)dnl
')

define(`file_header', `
#include <stdio.h>
#include <dlfcn.h>
ifdef(`$1_includes', `$1_includes')
')

define(`override_header', `
  void *handle = NULL;
  //This will turn the function proto into a function pointer declaration
  patsubst($1_proto, $1, `(*real_func)') = NULL;
  const char library[] = "$1_library";
  handle = dlopen(library, RTLD_LAZY);

  if (handle == NULL) {
    fprintf(stderr, "Failed to dlopen %s\n", library);
    fprintf(stderr, "dlerror says: %s\n", dlerror());
    return -1;
  }
  real_func = dlsym(handle, "$1");
  ')


# Function prototypes
define(`malloc_proto',`void *malloc(size_t size)')
define(`bind_proto',`int bind(int s, const struct sockaddr *addr, socklen_t addrlen)')
define(`connect_proto',`int connect(int s, const struct sockaddr *name, socklen_t namelen)')
define(`open_proto',`int open(const char *path, int flags, ...)')
# Hack because open uses ... for the last arg.
define(`open_call', `path, flags')

# X Functions
define(`XTestFakeButtonEvent_proto', `int XTestFakeButtonEvent(Display* dpy, unsigned int button, Bool is_press, unsigned long delay)')
define(`XGrabKey_proto', `int XGrabKey(Display* display, int keycode, unsigned int modifiers, Window grab_window, Bool owner_events, int pointer_mode, int keyboard_mode)')
define(`XGrabKeyboard_proto', `int XGrabKeyboard(Display* display, Window grab_window, Bool owner_events, int pointer_mode, int keyboard_mode, Time time)')
define(`XUngrabKey_proto', `int XUngrabKey(Display* display, int keycode, unsigned int modifiers, Window grab_window)')
define(`XUngrabKeyboard_proto', `int XUngrabKeyboard(Display* display, Time time)')

# Function includes
define(`bind_includes', `network_includes')
define(`connect_includes', `network_includes')
define(`network_includes', `
#include <sys/types.h>
#include <sys/socket.h>
')
define(`open_includes', `
#include <fcntl.h>
')
define(`malloc_includes', `
#include <stdlib.h>
')

define(`XTestFakeButtonEvent_includes', `
Xlib_includes
#include <X11/extensions/XTest.h>
')
define(`XGrabKey_includes', `Xlib_includes')
define(`XGrabKeyboard_includes', `Xlib_includes')
define(`XUngrabKey_includes', `Xlib_includes')
define(`XUngrabKeyboard_includes', `Xlib_includes')
define(`Xlib_includes', `
#include <X11/Xlib.h>
')

# Libraries
define(`libc_library', `/lib/libc.so.6')
define(`malloc_library', `libc_library')
define(`open_library', `libc_library')
define(`connect_library', `libc_library')
define(`bind_library', `libc_library')
define(`XTestFakeButtonEvent_library', `/usr/lib/libXtst.so')
define(`XGrabKey_library', `/usr/lib/libX11.so')
define(`XGrabKeyboard_library', `/usr/lib/libX11.so')
define(`XUngrabKey_library', `/usr/lib/libX11.so')
define(`XUngrabKeyboard_library', `/usr/lib/libX11.so')

define(`override', `
  ifdef(`$1_proto', , `fatal(`No such function "$1" known')')
  file_header($1)
  $1_proto {
    override_header($1)
    $2

    return real_func(
      ifdef(`$1_call', `$1_call', 
      //RETURNVARS $1_proto
      )
    );
  }
  ')
divert(0)dnl
